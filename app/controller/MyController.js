/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MyController', {
    extend: 'Ext.app.Controller',
    config: {
        refs: {

            signinMoveButton: '#SigninMoveButton',
            signinView: '#SigniniView',
            main: '#Main',
            loginButton: '#LoginButton',
            mainTitle: '#MainTitle',
            keyInputButton: '#KeyInputButton',
            registerButton: '#RegisterButton',

            qnAWriteButton: '#QnAWriteButton',
            backButton: '#BackButton',
            loginEmailField: '#LoginEmailField',
            loginPassField: '#LoginPassField',
            mailSendButton: '#MailSendButton',
            signinButton: '#SigninButton',
            lectureTabBar: '#LectureTabBar',
            tabBackButton3: '#TabBackButton3',
            qnAWriteCanselButton: '#QnAWriteCanselButton'
        },

        control: {
            "signinMoveButton": {
                tap: 'signinMoveBtnAction'
            },
            "loginButton": {
                tap: 'loginBtnAction'
            },
            "keyInputButton": {
                tap: 'keyInputBtnAction'
            },
            "registerButton": {
                tap: 'registerBtnAction'
            },

            "qnAWriteButton": {
                tap: 'qnAWriteBtnAction'
            },
            "backButton": {
                tap: 'backBtnAction'

            },
            "mailSendButton": {
                tap: 'mailSendBtnAction'
            },
            "signinButton": {
                tap: 'SigninBtnAction'
            },
            "button": {
                tap: 'tabPanelBackBtnAction'
            }
        }
    },


    signinMoveBtnAction: function(button, e, options) {
        //로그인화면에서 가입하기 버튼을 눌렀을때 발생하는 함수

        //card속성을 가진 panel에서 맨위에 올릴 panel을 결정. Main panel안에 
        //있는 panel중 9번째 패널을 맨위에 올림.

        this.getMain().setActiveItem(4);

        this.getMainTitle().setTitle("가입하기");
        this.getBackButton().show();
    },

    loginBtnAction: function(button, e, options) {
        //로그인화면에서 로그인 버튼을 눌렀을때 발생하는 함수


        //console.log("로그인버튼을 누름");
        //console.log(Ext.getCmp("LoginEmailField").getValue());
        //console.log(request.getParameter("Email"));
        if(this.getLoginEmailField().getValue()=="2222" && 
        this.getLoginPassField().getValue()=="1111")
        {
            this.getMain().setActiveItem(1);

            this.getMainTitle().setTitle("강의목록");
            this.getKeyInputButton().show();
            this.getBackButton().show();
        }
        else {
            Ext.Msg.alert('로그인 오류',
            "존재하지 않는 이메일이거나 비밀번호가 맞지 않습니다."
            );
        }
    },

    keyInputBtnAction: function(button, e, options) {
        //강의목록화면에서 강의등록 버튼을 눌렀을때 발생하는 함수
        this.getMain().setActiveItem(2);


        this.getMainTitle().setTitle("강의등록");
        this.getKeyInputButton().hide();
        this.getBackButton().show();
    },

    registerBtnAction: function(button, e, options) {
        //강의등록화면에서  키입력후 강의등록버튼을 눌렀을때 발생하는 함수
        this.getMain().setActiveItem(3);

        this.getMainTitle().hide();
        //this.getMainTitle().setTitle("해당강의");
        //this.getCmp("TabBackButton1").show();
    },

    qnAWriteBtnAction: function(button, e, options) {
        //댓글목록화면에서 댓글쓰기 버튼을 눌렀을때 발생하는 함수

        this.getMain().getActiveItem(3).getActiveItem(2).getActiveItem(1).setActiveItem(1);
        this.getMainTitle().hide();
        //this.getMainTitle().setTitle("댓글쓰기");
        this.getQnAWriteButton().hide();
        this.getTabBackButton3().hide();
        this.getQnAWriteCanselButton().show();
        //this.getCmp("TabBackButton3").show();
    },

    backBtnAction: function(button, e, options) {
        if(this.getMain().getActiveItem().getId()=="LectureListView"){
            this.getMain().setActiveItem(0);

            this.getMainTitle().show();
            this.getMainTitle().setTitle("로그인");
            this.getKeyInputButton().hide();
            this.getBackButton().hide();
        }

        else if(this.getMain().getActiveItem().getId()=="KeyInputView")
        {this.getMain().setActiveItem(1);

            this.getMainTitle().show();
            this.getMainTitle().setTitle("강의목록");
            this.getKeyInputButton().show();
            this.getBackButton().show();

        }

        else if(this.getMain().getActiveItem().getId()=="LectureTabPanel")
        { this.getMain().setActiveItem(1);
            this.getMainTitle().show();
            this.getMainTitle().setTitle("강의목록");
            this.getKeyInputButton().show();
            this.getBackButton().show();
        }

        else if(this.getMain().getActiveItem().getId()=="SigninView")
        {this.getMain().setActiveItem(0);
            this.getMainTitle().show();
            this.getMainTitle().setTitle("로그인");
            this.getKeyInputButton().hide();
            this.getBackButton().hide();
            Ext.getCmp("SigninEmailField").setValue("");
            Ext.getCmp("SigninNumField").setValue("");
            Ext.getCmp("SigninPassField").setValue("");
        }
    },

    mailSendBtnAction: function(button, e, options) {
        if(Ext.getCmp("SigninEmailField").getValue()){

            if(Ext.getCmp("SigninEmailField").getValue()=="imgirl25@naver.com"){
                Ext.Msg.alert("이메일 중복","이미 등록되어있습니다.");
            }

            else{
                // email send Ext.getCmp('SigninEmailField').getValue()
                Ext.Msg.alert("인증메일발송","위 주소로 메일을 발송하였습니다.");
            }
        }

        else{
            Ext.Msg.alert("입력요구","아무것도 입력되어있지 않습니다.");
        }
    },

    SigninBtnAction: function(button, e, options) {
        if(Ext.getCmp("SigninNumField").getValue()&& Ext.getCmp("SigninPassField").getValue()){

            main=this.getMain();
            maintitle=this.getMainTitle();

            if(Ext.getCmp("SigninNumField").getValue()=="1111"){
                Ext.Msg.confirm("가입확인","가입하시겠습니까?",function(prm){
                    if(prm=="yes"){
                        //가입에 입력한 정보를 DB에 저장
                        main.setActiveItem(0);
                        maintitle.setTitle("로그인");

                        Ext.getCmp("SigninEmailField").setValue("");
                        Ext.getCmp("SigninNumField").setValue("");
                        Ext.getCmp("SigninPassField").setValue("");
                    }
                    else{
                        //아무 동작을 하지 않고 현재 화면유지.
                    }           
                });
            }

            else{
                // email send Ext.getCmp('SigninEmailField').getValue()
                Ext.Msg.alert("인증번호오류","인증번호가 틀렸습니다.");
            }
        }

        else{
            Ext.Msg.alert("입력요구","아무것도 입력되어있지 않습니다.");
        }
    },

    tabPanelBackBtnAction: function(button, e, options) {
        if(button.getId()=="TabBackButton1" || button.getId()=="TabBackButton2" || button.getId()=="TabBackButton3")
        {
            this.getMain().setActiveItem(1);
            this.getMainTitle().show();
            this.getMainTitle().setTitle("강의목록");

            this.getKeyInputButton().show();
            this.getBackButton().show();
        }
        if(button.getId()=="QnAWriteCanselButton")
        {
            this.getMain().getActiveItem(3).getActiveItem(2).getActiveItem(1).setActiveItem(0);
            this.getMainTitle().hide();
            //this.getMainTitle().setTitle("댓글쓰기");
            this.getQnAWriteButton().show();
            this.getQnAWriteCanselButton().hide();
            this.getTabBackButton3().show();
        }
    }

});